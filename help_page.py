import streamlit as st

def show_help_page():
    st.title("Справка / Помощь")
    st.markdown("""
**Добро пожаловать в приложение для прогнозирования временных рядов!**

Ниже приводится пошаговая инструкция, а также простые примеры для лучшего понимания.

---

### 1. Загрузка данных
- **Train (обязательно)**: выберите CSV или Excel-файл с историческими данными.  
  - Пример структуры CSV:

  \`\`\`csv
  Date,ID,Target,SalesChannel
  2023-01-01,Store_A,100,Online
  2023-01-02,Store_A,120,Online
  2023-01-01,Store_B,55,Offline
  \`\`\`

  Минимум три колонки: 
  1) Дата (Date), 
  2) Целевая переменная (Target), 
  3) Идентификатор временного ряда (ID).

- **Forecast (необязательно)**: аналогичный формат, но Target может быть пустым или состоять из NaN.

После загрузки Train-файла приложение покажет первые строки, базовую статистику и пропуски.

---

### 2. Настройка столбцов
- **Колонка с датой (Date)**: нужно указать столбец, где лежит дата.
- **Колонка Target**: столбец с числовым значением, которое необходимо прогнозировать.
- **Колонка ID**: строковый или категориальный идентификатор (например, 'Store_A', 'Store_B').
- **Статические признаки (до 3)**: колонки, которые не меняются со временем (например, 'SalesChannel').  
- Опция "Учитывать праздники РФ?" — добавляет бинарную фичу (0/1) с учётом выходных и праздничных дней.

Пример выбора:
1) Дата → `Date`
2) Target → `Target`
3) ID → `ID`
4) Статические признаки → `["SalesChannel"]`

---

### 3. Обработка пропусков
- Выберите способ заполнения пропусков (None, Constant=0, Forward fill, Group mean).
  - **Constant=0**: все NaN в числовых столбцах превращаются в 0.
  - **Forward fill**: вперёд/назад, чтобы заполнить пропуски предыдущими значениями.
  - **Group mean**: усредняет пропуски внутри каждой группы (ID или других столбцов).

Пример: если у вас колонки `Sales`, `Temperature` и есть пропуски в `Temperature`, можно заполнить их средним по каждому магазину (ID).

---

### 4. Частота временного ряда (freq)
- Можно выбрать `auto (угадать)` или указать вручную: D (день), H (час), M (месяц) и т.п.
- Пример: если данные у вас с шагом в 1 день, выберите 'D'.
- Если AutoGluon не может определить частоту автоматически, приложение выдаст предупреждение.

---

### 5. Метрика и модели
- **Метрика**: (MASE, SMAPE, MSE, RMSE и т.д.).
- **Модели AutoGluon**: можно сразу выбрать \`* (все)\` или конкретные модели (AutoARIMA, DeepAR, Transformer и др.).
- **Presets**: (fast_training, medium_quality, high_quality, best_quality) — чем выше качество, тем дольше обучение.
- **prediction_length**: на сколько шагов вперёд делаем прогноз (например, 7 дней).
- **time_limit**: лимит времени на обучение (секунды).
- **mean_only**: если нужна только медиана (одна кривая прогноза без доверительного интервала).

---

### 6. Обучение модели
1. Нажмите кнопку **«Обучить модель»**.
2. Приложение:
   - Заполнит пропуски по выбранному методу.
   - Добавит признак праздников (если нужно).
   - Приведёт данные к формату TimeSeriesDataFrame, учитывая ID, Date, Target.
   - Запустит \`TimeSeriesPredictor.fit()\`.
3. По окончании вы увидите:
   - **Leaderboard** — таблица с моделями и результатами (score_val).
   - **Fit summary** — подробная сводка обучения.

---

### 7. Прогноз
- Нажмите **«Сделать прогноз»**.
- Если загрузили Forecast, то прогноз считается на нём, иначе — на Train (для теста).
- Отобразятся первые строки таблицы с предсказанными значениями (квантили 0.1, 0.5, 0.9 и т.п.).
- Если есть квантили, приложение покажет графики для первых нескольких ID.

Пример (после нажатия «Сделать прогноз»):
\`\`\`
   item_id   timestamp   0.1      0.5      0.9
0  Store_A   2023-03-01  105.2    110.7    120.5
1  Store_A   2023-03-02  103.1    115.2    125.8
...
\`\`\`

---

### 8. Сохранение результатов
- Укажите путь к Excel-файлу (например, `results.xlsx`).
- Нажмите **«Сохранить результаты»**. 
- Приложение сохранит в Excel:
  - TrainData, ForecastData, Leaderboard, Predictions, Статические фичи.

---

### 9. Логи
- Кнопка **«Показать логи»** отобразит содержимое `logs/app.log`.
- Лог-файл содержит информацию об ошибках и основных действиях (загрузка данных, обучение).

---

### 10. Полезные советы
- Если частота (freq) не распознаётся автоматически, укажите её вручную (D, H, M...).
- При работе с большими данными увеличьте \`time_limit\`.
- Проверяйте целостность данных (нет ли строк без дат, нет ли неправильных форматов).

**Успехов в использовании приложения!**
""")
