Beginning AutoGluon training... Time limit = 60s
AutoGluon will save models to 'C:\my_time_series_app\AutogluonModels\ag-20250123_085700'
=================== System Info ===================
AutoGluon Version:  1.2
Python Version:     3.10.16
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26120
CPU Count:          24
GPU Count:          0
Memory Avail:       34.66 GB / 63.15 GB (54.9%)
Disk Space Avail:   472.02 GB / 1861.53 GB (25.4%)
===================================================
Setting presets to: medium_quality

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'NaiveModel': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 10,
 'quantile_levels': [0.5],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 60,
 'verbosity': 2}

No path specified. Models will be saved in: "AutogluonModels\ag-20250123_085818"
Beginning AutoGluon training... Time limit = 60s
AutoGluon will save models to 'C:\my_time_series_app\AutogluonModels\ag-20250123_085818'
=================== System Info ===================
AutoGluon Version:  1.2
Python Version:     3.10.16
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26120
CPU Count:          24
GPU Count:          0
Memory Avail:       34.64 GB / 63.15 GB (54.9%)
Disk Space Avail:   472.02 GB / 1861.53 GB (25.4%)
===================================================
Setting presets to: medium_quality

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'NaiveModel': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 10,
 'quantile_levels': [0.5],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 60,
 'verbosity': 2}

Inferred time series frequency: 'h'
Provided train_data has 148060 rows, 200 time series. Median time series length is 700 (min=700, max=960). 

Provided data contains following columns:
	target: 'target'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2025-01-23 11:58:18
Models that will be trained: ['Naive']
Training timeseries model Naive. Training for up to 59.9s of the 59.9s of remaining time.
	-6.4052       = Validation score (-MASE)
	0.07    s     = Training runtime
	2.56    s     = Validation (prediction) runtime
Not fitting ensemble as only 1 model was trained.
Training complete. Models trained: ['Naive']
Total runtime: 2.64 s
Best model: Naive
Best model score: -6.4052
Additional data provided, testing on additional data. Resulting leaderboard will be sorted according to test score (`score_test`).
Model not specified in predict, will default to the model with the best validation score: Naive
