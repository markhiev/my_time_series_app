Beginning AutoGluon training... Time limit = 60s
AutoGluon will save models to 'C:\my_time_series_app\AutogluonModels\ag-20250122_230034'
=================== System Info ===================
AutoGluon Version:  1.2
Python Version:     3.10.16
Operating System:   Windows
Platform Machine:   AMD64
Platform Version:   10.0.26120
CPU Count:          24
GPU Count:          0
Memory Avail:       38.80 GB / 63.15 GB (61.4%)
Disk Space Avail:   470.89 GB / 1861.53 GB (25.3%)
===================================================
Setting presets to: medium_quality

Fitting with arguments:
{'enable_ensemble': True,
 'eval_metric': MASE,
 'hyperparameters': {'NaiveModel': {}, 'SeasonalNaiveModel': {}},
 'known_covariates_names': [],
 'num_val_windows': 1,
 'prediction_length': 5,
 'quantile_levels': [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9],
 'random_seed': 123,
 'refit_every_n_windows': 1,
 'refit_full': False,
 'skip_model_selection': False,
 'target': 'target',
 'time_limit': 60,
 'verbosity': 2}

Inferred time series frequency: 'h'
Provided train_data has 148060 rows, 200 time series. Median time series length is 700 (min=700, max=960). 

Provided data contains following columns:
	target: 'target'

AutoGluon will gauge predictive performance using evaluation metric: 'MASE'
	This metric's sign has been flipped to adhere to being higher_is_better. The metric score can be multiplied by -1 to get the metric value.
===================================================

Starting training. Start time is 2025-01-23 02:00:35
Models that will be trained: ['Naive', 'SeasonalNaive']
Training timeseries model Naive. Training for up to 19.5s of the 58.6s of remaining time.
	-5.2272       = Validation score (-MASE)
	0.09    s     = Training runtime
	2.55    s     = Validation (prediction) runtime
Training timeseries model SeasonalNaive. Training for up to 28.0s of the 55.9s of remaining time.
	-0.9875       = Validation score (-MASE)
	0.10    s     = Training runtime
	0.16    s     = Validation (prediction) runtime
Fitting simple weighted ensemble.
	Ensemble weights: {'Naive': 0.03, 'SeasonalNaive': 0.97}
	-0.9254       = Validation score (-MASE)
	0.09    s     = Training runtime
	2.71    s     = Validation (prediction) runtime
Training complete. Models trained: ['Naive', 'SeasonalNaive', 'WeightedEnsemble']
Total runtime: 3.09 s
Best model: WeightedEnsemble
Best model score: -0.9254
Additional data provided, testing on additional data. Resulting leaderboard will be sorted according to test score (`score_test`).
Model not specified in predict, will default to the model with the best validation score: WeightedEnsemble
Model not specified in predict, will default to the model with the best validation score: WeightedEnsemble
